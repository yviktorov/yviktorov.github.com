---
layout: post
title: Using sfWidgetFormReCaptcha with ajax enabled forms
categories: [symfony]
truncatewords: 18
---

In this post I wold like to make a note about usage of [sfWidgetFormReCaptcha][1] with ajax enabled forms.

The [sfWidgetFormReCaptcha][1] renders a [ReCaptcha][3] widget, i.e. let you protect your forms with visual code generated by [ReCaptcha][3], but I assume you already familiar with this widget, [visit plugin page][2] if not ;)

Current implementation will not work out of box with ajax enabled forms, because, [according implementation][1], ajax response will include link to external resource, e.g. `recaptcha_ajax.js`, and browser will throw security issue.

## Solution

Remove `recaptcha_ajax.js` inclusion from widget and put into header of your page.

### Step 1. Create sfWidgetFormReCaptcha2

We will be creating `sfWidgetFormReCaptcha2.class.php` file which simply extends original `sfWidgetFormReCaptcha` and overrides `render(...)` method. You can put into `apps/frontend/lib/widget/`.

{% highlight php %}
<?php

class sfWidgetFormReCaptcha2 extends sfWidgetFormReCaptcha
{
  /**
   * @see sfWidgetFormReCaptcha
   */
  public function render($name, $value = null, $attributes = array(), $errors = array())
  {
    $server = $this->getServerUrl();
    $key = $this->getOption('public_key');

    return sprintf('
    <div id="recaptcha_div"></div>

    <script type="text/javascript">
    Recaptcha.create("%s",
      "recaptcha_div", {
         theme: "red",
         callback: Recaptcha.focus_response_field
      });
    </script>
    <noscript>
      <iframe src="%s/noscript?k=%s" height="300" width="500" frameborder="0"></iframe><br />
      <textarea name="recaptcha_challenge_field" rows="3" cols="40"></textarea>
      <input type="hidden" name="recaptcha_response_field" value="manual_challenge" />
    </noscript>
    ', $key, $server, $key);
  }
}
{% endhighlight %}

### Step 2. Modify your form class

Modify your form class as follow, e.g. simply replace `sfWidgetFormReCaptcha` to `sfWidgetFormReCaptcha2`

{% highlight php %}
<?php
    $this->widgetSchema['captcha'] = new sfWidgetFormReCaptcha2(array(
      'public_key' => sfConfig::get('app_recaptcha_public_key')
    ));
{% endhighlight %}

**NOTE:** The usage of ReCaptcha widget and validator explained [here][4]

### Step 3. Include ReCaptcha api

For example, put into your template ;)

{% highlight php %}
<?php use_javascript('http://api.recaptcha.net/js/recaptcha_ajax.js') ?>
{% endhighlight %}

**NOTE:** Above template must be processed with regular(non ajax) response at least once, i.e. first time page requested!

[1]: http://trac.symfony-project.org/browser/plugins/sfFormExtraPlugin/lib/widget/sfWidgetFormReCaptcha.class.php
[2]: http://www.symfony-project.org/plugins/sfFormExtraPlugin
[3]: http://recaptcha.net/
[4]: http://www.symfony-project.org/blog/2008/10/18/spice-up-your-forms-with-some-nice-widgets-and-validators
